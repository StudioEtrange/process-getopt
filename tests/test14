test_body() {
    source ../src/process-getopt
    BOOL=""
    BOOL_func() { [ "${1:-""}" ] && BOOL="yes"; }
    add_opt "BOOL" "bool description" b "" bool

    ASDA=""
    ASDA_func() { [ "${1:-""}" ] && ASDA="$2"; }
    add_opt "ASDA" "asda description" a arg asda argl

    SILENT=""
    SILENT_func() { [ "${1:-""}" ] && SILENT="$2"; }
    add_opt "SILENT" "silent description" s arg silent argl

	INT=""
	INT_func() { [ "${1:-""}" ] && INT="$2"; }
    add_opt "INT" "int description" i integer int integer i 1-2

    add_std_opts     # define the standard options --help etc:
    del_opt QUIET END_OPTIONS
    TEMP=$(call_getopt "$@") || exit 1
    eval set -- "$TEMP"
    process_opts "$@" || shift $?
    echo "BOOL=$BOOL"
    echo "ASDA=$ASDA"
    echo "SILENT=$SILENT"
	echo "INT=$INT"
    for i in $@; do echo -n "\"$i\" "; done
    echo
    return 0
}

test_setup() {
    TEST_TITLE="--print-man-page"
    TEST_ARGS="--print-man-page"
    TEST_IGNORE_STDOUT=
    TEST_IGNORE_STDERR=
    TEST_IGNORE_VALUE=
    TEST_EXP_VAL=0
    cat > $TEST_EXP_STDOUT <<"EOF"
.TH TEST_BODY 1 \" -*- nroff -*-
.SH NAME
test_body \- 
.SH SYNOPSIS
.hy 0
.na
.B test_body
.RB "[" \-bhVv "]"
[
.B \-\-bool \-\-help \-\-version \-\-verbose
]
 [\fB\-a\fP \fIarg\fP,\fB\-\-asda\fP=\fIargl\fP]
 [\fB\-s\fP \fIarg\fP,\fB\-\-silent\fP=\fIargl\fP]
 [\fB\-i\fP \fIinteger\fP,\fB\-\-int\fP=\fIinteger\fP]

.ad b
.hy 0
.SH DESCRIPTION

.P
Foobar foobar foobar
.SH OPTIONS
.TP
.B \fB\-b\fP, \fB\-\-bool\fP
bool description
.TP
.B \fB\-a\fP \fIarg\fR, \fB\-\-asda\fP\fI=argl\fR
asda description
.TP
.B \fB\-s\fP \fIarg\fR, \fB\-\-silent\fP\fI=argl\fR
silent description
.TP
.B \fB\-i\fP \fIinteger\fR, \fB\-\-int\fP\fI=integer\fR
int description. Must be of type 'i' in the range '1-2'.
.TP
.B \fB\-h\fP, \fB\-\-help\fP
print this help and exit
.TP
.B \fB\-V\fP, \fB\-\-version\fP
print version and exit
.TP
.B \fB\-v\fP, \fB\-\-verbose\fP
do it verbosely
.SH "EXIT STATUS"
.SH "ENVIRONMENT"
.SH "FILES"
.SH "EXAMPLES"
.SH "NOTES"
.SH "BUGS"
.SH "SEE ALSO"
.SH "AUTHOR"
Written by Foo Bar <foobar@foobar.org>
.P
.RB http://foobar.foobar.org/foobar
.SH "COPYRIGHT"
Copyright (c) 2008-2011 Robert Hepple
.br
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
.P
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
.P
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
EOF
    cat > $TEST_EXP_STDERR <<"EOF"
EOF
}
