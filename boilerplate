#!/bin/sh

# http://bhepple.freeshell.org
# http://process-getopt.sourceforge.net
# $Id: boilerplate,v 1.8 2008/11/12 05:32:57 bhepple Exp $

# A minimal script that uses process-getopt - pour your content in here
# where it says  # CUSTOMISE

check_and_process_opts() {
    local NO_OPTS TEMP PG

    # avoid the overhead of process-getopt if there are no options:
    NO_OPTS="yes"
    for i in "$@"; do
        case "$i" in
            -*)
                NO_OPTS=""
                break
                ;;
            *)
                [ "$STOP_ON_FIRST_NON_OPT" ] && break
                ;;
        esac
    done
    [ "$NO_OPTS" ] && return 1

    # source process-getopt:
    PG=$(type process-getopt |cut -d' ' -f 3)
    [ "$PG" ] || exit 1
    source $PG

    # define our options: # CUSTOMISE
    SLOT_func()   { [ "$1" ] && SLOT="yes"; }
    add_opt SLOT "boolean option" s "" slot 
    TOKEN_func()  { [ "$1" ] && TOKEN="$2"; }
    add_opt TOKEN "option that takes a value" t n token number

    # define the standard options --help etc:
    add_std_opts 

    # process the command line:
    TEMP=$(call_getopt "$@") || exit 1
    eval set -- "$TEMP"
    process_opts "$@"
    shift "$?"

    # return the new command line (stripped of options):
    NEW_ARGS=( "$@" )
    return 0
}

##########################
#         M A I N        #
##########################

PROG=$(basename $0)
DIR=$(dirname $0)
VERSION="1.3" # CUSTOMISE
VERBOSE=""
ARGUMENTS="<files>" # CUSTOMISE
SHORT_DESC="Short description. " # CUSTOMISE
USAGE="More detailed description." # CUSTOMISE

TMP="/tmp/tmp$$.tmp"
trap "/bin/rm -f $TMP" EXIT 

NEW_ARGS=( )
check_and_process_opts "$@" && set -- "${NEW_ARGS[@]}"

# At this point, all the options have been processed and removed from
# the arg list. We can now process $@ as arguments to the program.

# MAIN PROCESSING
# CUSTOMISE:
echo "Remaining args:"
for arg in "$@"; do echo "\"$arg\""; done

[ "$VERBOSE" ] && set -x

# do whatever:

exit 0
